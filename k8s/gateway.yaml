apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: dariyush1/libraryappmicroservice-gateway
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_CLOUD_CONSUL_HOST
              value: "consul"
            - name: SPRING_CLOUD_CONSUL_PORT
              value: "8500"
            - name: SPRING_CLOUD_CONSUL_DISCOVERY_HOSTNAME
              value: "gateway.default.svc.cluster.local"  # DNS сервиса Gateway
            - name: SPRING_CLOUD_CONSUL_DISCOVERY_PREFER_IP_ADDRESS
              value: "false"
            - name: SPRING_CLOUD_CONSUL_DISCOVERY_HEALTH_CHECK_URL
              value: "http://gateway.default.svc.cluster.local:8080/actuator/health"

            - name: POSTGRES_URL
              value: "jdbc:postgresql://postgres.default.svc.cluster.local:5432/postgres"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/actuator/prometheus"
spec:
  selector:
    app: gateway
  ports:
    - port: 8080
      targetPort: 8080