
server:
  port: 8080
spring:
  application:
    name: gateway-service

  cloud:
    gateway:
      routes:
        - id: book-service
          uri: lb://book-service
          predicates:
            - Path=/books/**
        - id: image-service
          uri: lb://image-service
          predicates:
            - Path=/images/**
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/auth/signIn,/auth/signUp
        - id: config-server
        - uri: lb://config-server

    circuitbreaker:
      resilience4j:
        instances:
          myCircuitBreaker:
            registerHealthIndicator: true
            slidingWindowSize: 10
            permittedNumberOfCallsInHalfOpenState: 3
            failureRateThreshold: 50
            waitDurationInOpenState: 10000

    consul:
      host: consul
      port: 8500
      discovery:
        enabled: true

  datasource:
    url: jdbc:postgresql://postgres:5432/postgres
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        connection.pool_size: 20
        jdbc.batch_size: 20
#  jpa:
#    hibernate:
#      ddl-auto: update
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect

  liquibase:
    enabled: false

  main:
    web-application-type: servlet
    allow-bean-definition-overriding: true

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

logging:
  level:
    org.springframework.cloud.gateway: trace

token:
  signing:
    key: 53A73E5F1C4E0A2D3B5F2D784E6A1B423D6F247D1F6E5C3A596D635A75327855

